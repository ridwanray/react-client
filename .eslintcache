[{"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/index.js":"1","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/App.js":"2","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/store.js":"3","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/reportWebVitals.js":"4","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/reducers/userReducers.js":"5","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/constants/userConstants.js":"6","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/screens/LoginScreen.js":"7","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/components/ErrorBoundary.js":"8","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/screens/Error404Screen.js":"9","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/components/Header.js":"10","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/screens/DashboardScreen.js":"11","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/actions/userActions.js":"12","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/components/ScrollToTop.js":"13","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/screens/HomeScreen.js":"14","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/reducers/dataReducers.js":"15","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/constants/dataConstants.js":"16","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/screens/SignupScreen.js":"17","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/actions/dataActions.js":"18","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/components/Datas.js":"19","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/components/Data.js":"20"},{"size":503,"mtime":1628150083827,"results":"21","hashOfConfig":"22"},{"size":1257,"mtime":1628193200188,"results":"23","hashOfConfig":"22"},{"size":922,"mtime":1628148104489,"results":"24","hashOfConfig":"22"},{"size":362,"mtime":1628137250815,"results":"25","hashOfConfig":"22"},{"size":2029,"mtime":1628153675112,"results":"26","hashOfConfig":"22"},{"size":630,"mtime":1628145502079,"results":"27","hashOfConfig":"22"},{"size":4613,"mtime":1628151503114,"results":"28","hashOfConfig":"22"},{"size":940,"mtime":1628141787797,"results":"29","hashOfConfig":"22"},{"size":259,"mtime":1628150175867,"results":"30","hashOfConfig":"22"},{"size":8314,"mtime":1628197979927,"results":"31","hashOfConfig":"22"},{"size":605,"mtime":1628155889703,"results":"32","hashOfConfig":"22"},{"size":3188,"mtime":1628207920561,"results":"33","hashOfConfig":"22"},{"size":537,"mtime":1628145745062,"results":"34","hashOfConfig":"22"},{"size":6754,"mtime":1628207705927,"results":"35","hashOfConfig":"22"},{"size":827,"mtime":1628156712910,"results":"36","hashOfConfig":"22"},{"size":200,"mtime":1628146477826,"results":"37","hashOfConfig":"22"},{"size":6760,"mtime":1628151316808,"results":"38","hashOfConfig":"22"},{"size":1129,"mtime":1628207874965,"results":"39","hashOfConfig":"22"},{"size":1527,"mtime":1628180037632,"results":"40","hashOfConfig":"22"},{"size":808,"mtime":1628158198841,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17wwlrb",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/index.js",[],"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/App.js",[],"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/store.js",[],"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/reportWebVitals.js",[],"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/reducers/userReducers.js",[],"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/constants/userConstants.js",[],"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/screens/LoginScreen.js",["88","89"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../actions/userActions\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Nav } from \"react-bootstrap\";\nfunction LoginScreen({ location, history }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { error, loading, userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/dashboard\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log(email, password);\n    dispatch(login(email, password));\n  };\n\n  return (\n    <section>\n      <div className=\"container d-flex flex-column\">\n        <div className=\"row align-items-center justify-content-center min-vh-100\">\n          <div className=\"col-md-6 col-lg-5 col-xl-4 py-6 py-md-0\">\n            <div style={{ marginTop: \"-50px\" }} className=\"\">\n              <div className=\"mb-5 text-center\">\n                <h6 className=\"h3 mb-1\">Account Login</h6>\n                <div>\n                  <div class=\"icon icon-shape rounded-circle bg-success text-white mr-4\">\n                    <i className=\"fa fa-lock\"></i>\n                  </div>\n                </div>\n                <p className=\"text-muted mb-0\"></p>\n              </div>\n              {error && (\n                <div\n                  className=\"text-center d-flex justify-content-center alert alert-group alert-outline-warning alert-dismissible fade show alert-icon\"\n                  role=\"alert\"\n                >\n                  <div className=\"alert-content text-center\">{error}</div>\n                </div>\n              )}\n              <span className=\"clearfix\"></span>\n              <form onSubmit={submitHandler} className=\"\">\n                <div className=\"form-group\">\n                  <label className=\"form-control-label\">Email address</label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        <i className=\"fa fa-envelope\"></i>\n                      </span>\n                    </div>\n                    <input\n                      required\n                      type=\"email\"\n                      className=\"form-control\"\n                      id=\"input-email\"\n                      placeholder=\"name@example.com\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-group mb-0\">\n                  <div className=\"d-flex align-items-center justify-content-between\">\n                    <div>\n                      <label className=\"form-control-label\">Password</label>\n                    </div>\n                  </div>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        <i className=\"fa fa-lock\"></i>\n                      </span>\n                    </div>\n                    <input\n                      required\n                      type=\"password\"\n                      className=\"form-control\"\n                      id=\"input-passwordlogin\"\n                      placeholder=\"Password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <div className=\"mt-4\">\n                  <button\n                    disabled={loading && \"disable\"}\n                    type=\"submit\"\n                    className=\"btn btn-block bg-dark text-white\"\n                  >\n                    {!loading ? (\n                      \"Sign in\"\n                    ) : (\n                      <div\n                        className=\"spinner-border spinner-border-sm  text-light\"\n                        role=\"status\"\n                      >\n                        <span class=\"sr-only\">Loading...</span>\n                      </div>\n                    )}\n                  </button>\n                </div>\n              </form>\n\n              <div className=\"d-flex justify-content-center text-center form-inline\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default LoginScreen;\n","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/components/ErrorBoundary.js",[],"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/screens/Error404Screen.js",[],"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/components/Header.js",[],"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/screens/DashboardScreen.js",["90","91","92","93"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Datas from \"../components/Datas\";\nfunction DashboardScreen({history}) {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        }\n    }, [history, userInfo])\n\n    return (\n        <div>\n           <div className='d-flex justify-content-center'>DashboardScreen</div>  \n\n           <Datas />\n        </div>\n    )\n}\n\nexport default DashboardScreen\n","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/actions/userActions.js",["94"],"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/components/ScrollToTop.js",[],"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/screens/HomeScreen.js",["95","96","97"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addNewDataToDB } from \"../actions/dataActions\";\n\nfunction HomeScreen({history }) {\n  const [location, setLocation] = useState(\"\");\n  const [customer_name, setCustomer] = useState(\"\");\n  const [amount_paid, setAmount] = useState(\"\");\n  const [volume_dispensed, setVolume] = useState(\"\");\n  const [complete_status, setStatus] = useState(\"True\");\n\n\n  const dispatch = useDispatch();\n\n  const addDataToDbR = useSelector((state) => state.addDataToDbR);\n  const { AddingDataLoading, DataAddedSuccessStatus } = addDataToDbR;\n\n \n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log(location,customer_name,amount_paid,volume_dispensed,complete_status,'ioak')\n    dispatch(addNewDataToDB(location,customer_name,amount_paid,volume_dispensed,complete_status));\n  };\n\n  return (\n    <section>\n      <div className=\"container d-flex flex-column\">\n        <div className=\"row align-items-center justify-content-center min-vh-100\">\n          <div className=\"col-md-8 col-lg-5 py-6\">\n            <div>\n              <div className=\" text-center\">\n                <h6 className=\"h3 mb-1\">New Data</h6>\n              </div>\n            \n\n              <span className=\"clearfix\"></span>\n              <form onSubmit={submitHandler}>\n                <div className=\"form-group\">\n                  <label className=\"form-control-label\">Location</label>\n                  <div className=\"input-group input-group-merge\">\n                    <input\n                      required\n                      type=\"text\"\n                      className=\"form-control form-control-prepend\"\n                      id=\"input-email\"\n                      placeholder=\"location\"\n                      value={location}\n                      onChange={(e) => setLocation(e.target.value)}\n                    />\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                       \n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"form-control-label\">Customer Name</label>\n                  <div className=\"input-group input-group-merge\">\n                    <input\n                      required\n                      type=\"text\"\n                      className=\"form-control form-control-prepend\"\n                      id=\"input-email\"\n                    \n                      placeholder=\"Customer Name\"\n                      value={customer_name}\n                      onChange={(e) => setCustomer(e.target.value)}\n                    />\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                       \n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"form-control-label\">Amount Paid</label>\n                  <div className=\"input-group input-group-merge\">\n                    <input\n                      required\n                    \n                      type=\"number\"\n                      className=\"form-control form-control-prepend\"\n                      \n                      placeholder=\"Amount Paid\"\n                      value={amount_paid}\n                      onChange={(e) => setAmount(e.target.value)}\n                    />\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                     \n                      </span>\n                    </div>\n                  </div>\n                </div>\n               \n                <div className=\"form-group mb-4\">\n                  <div className=\"d-flex align-items-center justify-content-between\">\n                    <div>\n                      <label className=\"form-control-label\">Volume Dispensed</label>\n                    </div>\n                    <div className=\"mb-2\">\n                      <a\n                     \n                        className=\"small text-muted border-primary\"\n                        \n                      >\n                       \n                      </a>\n                    </div>\n                  </div>\n                  <div className=\"input-group input-group-merge\">\n                    <input\n                      required\n                      type=\"number\"\n                      className=\"form-control form-control-prepend\"\n                      \n                     \n                      value={volume_dispensed}\n                      onChange={(e) => setVolume(e.target.value)}\n                    />\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        \n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"form-group mb-4\">\n                  <div className=\"d-flex align-items-center justify-content-between\">\n                    <div>\n                      <label className=\"form-control-label\">\n                        Status\n                      </label>\n                    </div>\n                   \n                  </div>\n                  <div className=\"input-group input-group-merge\">\n                  <select\n                  clasName='form-control'\n                  onChange={(e) => setStatus(e.target.value)}\n\n                  value={complete_status}\n\n                   >\n                    <option value=\"True\">Completed</option>\n                    <option value=\"False\">Not Completed</option>\n                  </select>\n                   \n                    \n                  </div>\n                </div>\n\n                <div className=\"mt-4\">\n                  <button\n                    disabled={AddingDataLoading && \"disable\"}\n                    type=\"submit\"\n                    className=\"btn btn-block bg-dark text-white\"\n                  >\n                    {AddingDataLoading ? (\n                      <div\n                        className=\"spinner-border spinner-border-sm  text-light\"\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    ) : (\n                      \"Add new data\"\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default HomeScreen;\n","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/reducers/dataReducers.js",[],"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/constants/dataConstants.js",[],"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/screens/SignupScreen.js",["98","99","100","101"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerAccount } from \"../actions/userActions\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Nav } from \"react-bootstrap\";\n\nfunction SignupScreen({ location, history }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { error, loading, userInfo } = userRegister;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/dashboard\");\n    }\n  });\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log(email, password, confirmPassword);\n\n    if (password !== confirmPassword) {\n      setMessage(\"Enter the same password\");\n    } else {\n      console.log(\"got heh\");\n      dispatch(registerAccount(email, password));\n    }\n  };\n\n  return (\n    <section>\n      <div className=\"container d-flex flex-column\">\n        <div className=\"row align-items-center justify-content-center min-vh-100\">\n          <div className=\"col-md-8 col-lg-5 py-6\">\n            <div>\n              <div className=\"mb-5 text-center\">\n                <h6 className=\"h3 mb-1\">Create account</h6>\n              </div>\n              {error && (\n                <div\n                  className=\"text-center d-flex justify-content-center alert alert-group alert-outline-warning alert-dismissible fade show alert-icon\"\n                  role=\"alert\"\n                >\n                  <div className=\"alert-content text-center\">{error}</div>\n                </div>\n              )}\n\n              <span className=\"clearfix\"></span>\n              <form onSubmit={submitHandler}>\n                <div className=\"form-group\">\n                  <label className=\"form-control-label\">Email address</label>\n                  <div className=\"input-group input-group-merge\">\n                    <input\n                      required\n                      type=\"email\"\n                      className=\"form-control form-control-prepend\"\n                      id=\"input-email\"\n                      placeholder=\"rayalan@gexample.com\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        <i className=\"fa fa-envelope\"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                {message && (\n                  <div\n                    className=\"text-center d-flex justify-content-center alert alert-group alert-outline-warning alert-dismissible fade show alert-icon\"\n                    role=\"alert\"\n                  >\n                    <div className=\"alert-content text-center\">{message}</div>\n                  </div>\n                )}\n                <div className=\"form-group mb-4\">\n                  <div className=\"d-flex align-items-center justify-content-between\">\n                    <div>\n                      <label className=\"form-control-label\">Password</label>\n                    </div>\n                    <div className=\"mb-2\">\n                      <a\n                        className=\"small text-muted border-primary\"\n                        data-toggle=\"password-text\"\n                        data-target=\"#input-password\"\n                      >\n                        <i data-feather=\"eye\"></i>\n                      </a>\n                    </div>\n                  </div>\n                  <div className=\"input-group input-group-merge\">\n                    <input\n                      required\n                      type=\"password\"\n                      className=\"form-control form-control-prepend\"\n                      id=\"input-passwordreg\"\n                      placeholder=\"********\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        <i className=\"fa fa-lock\"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"form-group mb-4\">\n                  <div className=\"d-flex align-items-center justify-content-between\">\n                    <div>\n                      <label className=\"form-control-label\">\n                        Confirm password\n                      </label>\n                    </div>\n                    <div className=\"mb-2\">\n                      <a\n                        className=\"small text-muted border-primary\"\n                        data-toggle=\"password-text\"\n                        data-target=\"#input-password\"\n                      >\n                        <i data-feather=\"eye\"></i>\n                      </a>\n                    </div>\n                  </div>\n                  <div className=\"input-group input-group-merge\">\n                    <input\n                      required\n                      type=\"password\"\n                      className=\"form-control form-control-prepend\"\n                      id=\"input-password\"\n                      placeholder=\"********\"\n                      value={confirmPassword}\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        <i className=\"fa fa-lock\"></i>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mt-4\">\n                  <button\n                    disabled={loading && \"disable\"}\n                    type=\"submit\"\n                    className=\"btn btn-block bg-dark text-white\"\n                  >\n                    {loading ? (\n                      <div\n                        className=\"spinner-border spinner-border-sm  text-light\"\n                        role=\"status\"\n                      >\n                        <span className=\"sr-only\">Loading...</span>\n                      </div>\n                    ) : (\n                      \"Create my account\"\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default SignupScreen;\n","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/actions/dataActions.js",[],"/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/components/Datas.js",["102"],"// import React from \"react\";\nimport Data from \"./Data\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDashboardDataInfo } from \"../actions/userActions\";\nfunction Datas({ history }) {\n  const dispatch = useDispatch();\n  const dataInfo = useSelector((state) => state.userDashboardData);\n  const { FetchningDataLoading, datas, error, success } = dataInfo;\n\n  useEffect(() => {\n    dispatch(getDashboardDataInfo());\n    console.log(\"coming from datas effect\");\n  }, [dispatch, history]);\n\n  return (\n    <>\n      <table\n        className=\"table  bg-light container\"\n        style={{ marginTop: \"10px\" }}\n      >\n        <thead>\n          <tr className=\"text-dark\">\n            <th scope=\"col\">Location</th>\n            <th scope=\"col\">Customer Name</th>\n            <th scope=\"col\">Amount Paid</th>\n            <th scope=\"col\">Volume Dispensed</th>\n            <th scope=\"col\">Status </th>\n          </tr>\n        </thead>\n        <tbody>\n          {FetchningDataLoading ? (\n            <div className=\"mt-5 container d-flex justify-content-center text-center text-muted h4\">\n              <span className=\"text-center\">Fetching data .... hang on....</span>\n            </div>\n          ) : error ? (\n            <div className=\"text-center ml-5 d-flex justify-content-center container\">\n              {error}\n            </div>\n          ) : (\n            <Data alldatas={datas} />\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default Datas;\n","/home/ray/Desktop/smartflowReactFrontEnd/react-client/src/components/Data.js",["103","104","105","106","107","108","109","110","111","112"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction Data(props) {\n  const [passedData, setPassedData] = useState(props.alldatas);\n\n  const allstate = useSelector((state) => state);\n\n  useEffect(() => {\n    {\n      console.log(\"consoling from Data effect\");\n    }\n  }, []);\n\n  return (\n    <>\n      {passedData.map((data) => (\n        <tr key={data.id}>\n          <td scope=\"col\">{data.location}</td>\n          <td scope=\"col\">{data.customer_name}</td>\n          <td scope=\"col\">{data.amount_paid}</td>\n\n          <td scope=\"col\">{data.volume_dispensed}</td>\n          <td scope=\"col\">{data.complete_status?'completed':'not completed'}</td>\n        </tr>\n      ))}\n    </>\n  );\n}\n\nexport default Data;\n",{"ruleId":"113","severity":1,"message":"114","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":23},{"ruleId":"113","severity":1,"message":"117","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":13},{"ruleId":"113","severity":1,"message":"118","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"119","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":21},{"ruleId":"113","severity":1,"message":"120","line":7,"column":13,"nodeType":"115","messageId":"116","endLine":7,"endColumn":18},{"ruleId":"113","severity":1,"message":"121","line":7,"column":20,"nodeType":"115","messageId":"116","endLine":7,"endColumn":27},{"ruleId":"113","severity":1,"message":"122","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":15},{"ruleId":"113","severity":1,"message":"123","line":1,"column":27,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"124","line":16,"column":30,"nodeType":"115","messageId":"116","endLine":16,"endColumn":52},{"ruleId":"125","severity":1,"message":"126","line":105,"column":23,"nodeType":"127","endLine":109,"endColumn":24},{"ruleId":"113","severity":1,"message":"114","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":23},{"ruleId":"113","severity":1,"message":"117","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":89,"column":23,"nodeType":"127","endLine":93,"endColumn":24},{"ruleId":"125","severity":1,"message":"126","line":123,"column":23,"nodeType":"127","endLine":127,"endColumn":24},{"ruleId":"113","severity":1,"message":"128","line":9,"column":47,"nodeType":"115","messageId":"116","endLine":9,"endColumn":54},{"ruleId":"113","severity":1,"message":"129","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"119","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":21},{"ruleId":"113","severity":1,"message":"130","line":6,"column":22,"nodeType":"115","messageId":"116","endLine":6,"endColumn":35},{"ruleId":"113","severity":1,"message":"131","line":8,"column":9,"nodeType":"115","messageId":"116","endLine":8,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":11,"column":5,"nodeType":"134","messageId":"135","endLine":13,"endColumn":6},{"ruleId":"136","severity":1,"message":"137","line":20,"column":15,"nodeType":"138","endLine":20,"endColumn":26},{"ruleId":"136","severity":1,"message":"137","line":21,"column":15,"nodeType":"138","endLine":21,"endColumn":26},{"ruleId":"136","severity":1,"message":"137","line":22,"column":15,"nodeType":"138","endLine":22,"endColumn":26},{"ruleId":"136","severity":1,"message":"137","line":24,"column":15,"nodeType":"138","endLine":24,"endColumn":26},{"ruleId":"136","severity":1,"message":"137","line":25,"column":15,"nodeType":"138","endLine":25,"endColumn":26},"no-unused-vars","'LinkContainer' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'toast' is defined but never used.","'useEffect' is defined but never used.","'DataAddedSuccessStatus' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'success' is assigned a value but never used.","'Link' is defined but never used.","'setPassedData' is assigned a value but never used.","'allstate' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute"]